---
layout: post
title: magicblog开发日记(3)-增加categories,tags和archive
category: essay
---

<p>&nbsp;</p>
<div>先来做archive，这个最简单，使用date_based.archive_month这个generic view即可，只要将下面的url加入</div>
<div>blog/urls.py即可：</div>
<div>url(r'^archive/(?P[a-z]+)/(?P\d{4})/$', blog_generic_view,</div>
<div>{'redirect_to': date_based.archive_month, 'date_field': 'published', 'template_name':&nbsp;</div>
<div>'blog/post_list.html',}</div>
<div>Django会自动寻找blog/post_archive_month.html作为template，此html文件如下：</div>
<div>[code]</div>
<div>&lt;h2&gt;Archive&lt;/h2&gt;</div>
<div>&lt;ul&gt;</div>
<div>{% for archive in archives %}</div>
<div>&lt;li&gt;&lt;a href="{% url blog_posts_by_month month=archive|date:'b',year=archive.year %}"&gt;{{&nbsp;</div>
<div>archive|date:"F Y" }}&lt;/a&gt;&lt;/li&gt;</div>
<div>{% endfor %}</div>
<div>&lt;/ul&gt;</div>
<div>[/code]</div>
<div>Archive这就ok了，很简答吧，下面开始搞categories和tags，这两个基本一样，都需要写一个view，如下:</div>
<div>[code]</div>
<div>def blog_posts_by_category(request, category_id):</div>
<div>&nbsp;&nbsp; &nbsp;category = get_object_or_404(Category, pk = category_id)</div>
<div>&nbsp;&nbsp; &nbsp;return blog_generic_view(</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;request,</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;list_detail.object_list,</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;queryset = category.post_set.all()</div>
<div>&nbsp;&nbsp; &nbsp;)</div>
<div>def blog_posts_by_tag(request, tag_id):</div>
<div>&nbsp;&nbsp; &nbsp;tag = get_object_or_404(Tag, pk = tag_id)</div>
<div>&nbsp;&nbsp; &nbsp;return blog_generic_view(</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;request,</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;list_detail.object_list,</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;queryset = tag.post_set.all()</div>
<div>&nbsp;&nbsp; &nbsp;)</div>
<div>[/code]</div>
<div>并且在blog/urls.py中加入下面这两行：</div>
<div>[code]</div>
<div>&nbsp;&nbsp; &nbsp;url(r'^category/(\d+)/$', blog_posts_by_category, name="blog_posts_by_category"),</div>
<div>&nbsp;&nbsp; &nbsp;url(r'^tag/(\d+)/$', blog_posts_by_tag, name="blog_posts_by_tag"),</div>
<div>[/code]</div>
<div>上面的都很简单，没什么好解释的，下面就要考虑如何将categories, tags和archieve用列表显示出来了，我准备</div>
<div>用自定义的template tag实现。</div>
<div>首先在blog app下创建templatetags目录，并且新建一个名为__init.py__的空文件，然后再在这个文件夹内新建一</div>
<div>个名为blog_sidebar.py的文件(文件名并不重要，关键是要和后面匹配)，如下：</div>
<div>[code]</div>
<div>from django import template</div>
<div>register = template.Library()</div>
<div>from magicblog.blog.models import *</div>
<div>@register.inclusion_tag('blog/categories.html')</div>
<div>def blog_categories():</div>
<div>&nbsp;&nbsp; &nbsp;return {</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'categories': Category.objects.all(),</div>
<div>&nbsp;&nbsp; &nbsp;}</div>
<div>@register.inclusion_tag('blog/archive.html')</div>
<div>def blog_archive():</div>
<div>&nbsp;&nbsp; &nbsp;return {</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'archives': Post.objects.dates('pub_date', 'month', order='DESC'),</div>
<div>&nbsp;&nbsp; &nbsp;}</div>
<div>@register.inclusion_tag('blog/tags.html')</div>
<div>def blog_tags():</div>
<div>&nbsp;&nbsp; &nbsp;return {</div>
<div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'tags': Tag.objects.all(),</div>
<div>&nbsp;&nbsp; &nbsp;}</div>
<div>[/code]</div>
<div>上面自定义了三个tag：blog_categories, blog_archive和blog_tags，如果上面的代码看不懂，可以google一下&ldquo;</div>
<div>custom template tags&rdquo;，看看文档就懂了。</div>
<div>类似于archieve.html，在相同目录下再新建如下两个文件：</div>
<div>[code]</div>
<div>//categories.html</div>
<div>&lt;h2&gt;Categories&lt;/h2&gt;</div>
<div>&lt;ul&gt;</div>
<div>{% for category in categories %}</div>
<div>&lt;li&gt;&lt;a href="{% url blog_posts_by_category category.id %}"&gt;{{ category.name }}&lt;/a&gt;&lt;/li&gt;</div>
<div>{% endfor %}</div>
<div>&lt;/ul&gt;</div>
<div>//tags.html</div>
<div>&lt;h2&gt;Tags&lt;/h2&gt;</div>
<div>&lt;ul&gt;</div>
<div>{% for tag in tags %}</div>
<div>&lt;a href="{% url blog_posts_by_tag tag.id %}"&gt;{{ tag.name }}&lt;/a&gt;</div>
<div>{% endfor %}</div>
<div>&lt;/ul&gt;</div>
<div>[/code]</div>
<div>最后我们就可以用上面自定义的那三个tag来完成侧边栏(sidebar)了，编辑sidebar.html如下：</div>
<div>[code]</div>
<div>&lt;div id="sidebar"&gt;</div>
<div>{% load blog_sidebar %}</div>
<div>&lt;ul&gt;</div>
<div>&lt;li&gt;</div>
<div>{% blog_categories %}</div>
<div>&lt;/li&gt;</div>
<div>&lt;li&gt;</div>
<div>{% blog_tags %}</div>
<div>&lt;/li&gt;</div>
<div>&lt;li&gt;</div>
<div>{% blog_archive %}</div>
<div>&lt;/li&gt;</div>
<div>&lt;/ul&gt;</div>
<div>&lt;/div&gt;</div>
<div>[/code]</div>
<div>在admin后台添加中文时发生了异常，原因是mysql的默认编码并非utf8，在网上找了很多办法，都没解决，最后发</div>
<div>现在create database 时加入 default character set utf8 就可以轻松解决这个问题。</div>
<div>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</div>
<div>今天是第三天，现在的magicblog已经完全可以投入使用了，不管是前端还是后端，基本功能都已经实现了，接下来</div>
<div>会实现一些如RSS，全文搜索之类的功能，加油，争取在过年之前搞定。</div>
<p>&nbsp;</p>